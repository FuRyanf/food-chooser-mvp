name: Keep Supabase Database Alive

on:
  schedule:
    # Every 30 minutes during active hours (6 AM - 11 PM UTC)
    # This reduces unnecessary pings during low-usage hours
    - cron: "*/30 6-23 * * *"  
    # Every 2 hours during off-hours (12 AM - 5 AM UTC)
    - cron: "0 0-5/2 * * *"
  workflow_dispatch: {}  # Allows manual trigger from Actions tab

jobs:
  keepalive:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    
    steps:
      - name: Validate Environment Variables
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          if [ -z "${SUPABASE_URL:-}" ]; then
            echo "‚ùå SUPABASE_URL secret is not set"
            exit 1
          fi
          
          if [ -z "${SUPABASE_ANON_KEY:-}" ]; then
            echo "‚ùå SUPABASE_ANON_KEY secret is not set" 
            exit 1
          fi
          
          echo "‚úÖ Environment variables validated"

      - name: Ping Supabase Auth Health
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        run: |
          echo "üè• Pinging Supabase Auth health endpoint..."
          
          response=$(curl --fail --silent --show-error --max-time 15 \
            --write-out "HTTPSTATUS:%{http_code}" \
            "${SUPABASE_URL}/auth/v1/health")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Auth service is healthy (HTTP $http_code)"
          else
            echo "‚ö†Ô∏è  Auth service returned HTTP $http_code"
            exit 1
          fi

      - name: Keep PostgREST Warm
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "üî• Warming up PostgREST with database query..."
          
          # Query the user_preferences table (small table with demo data)
          response=$(curl --fail --silent --show-error --max-time 20 \
            --write-out "HTTPSTATUS:%{http_code}" \
            -H "apikey: ${SUPABASE_ANON_KEY}" \
            -H "Authorization: Bearer ${SUPABASE_ANON_KEY}" \
            -H "Content-Type: application/json" \
            "${SUPABASE_URL}/rest/v1/user_preferences?select=user_id&limit=1")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -E 's/HTTPSTATUS:[0-9]{3}$//')
          
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ PostgREST query successful (HTTP $http_code)"
            echo "üìä Response: $body"
          else
            echo "‚ö†Ô∏è  PostgREST query failed (HTTP $http_code)"
            echo "üìÑ Response: $body"
            exit 1
          fi

      - name: Summary
        run: |
          echo "üéâ Keepalive completed successfully!"
          echo "‚è∞ Next run scheduled in 30 minutes (or 2 hours during off-hours)"
          echo "üîß You can manually trigger this workflow from the Actions tab"
